<?php

App::uses('AppController', 'Controller');

class PagesController extends AppController {

/**
 * This controller does not use a model
 *
 * @var array
 */
	public $uses = array();
	
	public function beforeFilter() {
        parent::beforeFilter();
        $this->Auth->allow('login', 'display','joinToSociety','homelogin');
    }

/**
 * Displays a view
 *
 * @param mixed What page to display
 * @return void
 * @throws NotFoundException When the view file could not be found
 *	or MissingViewException in debug mode.
 */
	public function display() {
		$path = func_get_args();

		$count = count($path);
		if (!$count) {
			return $this->redirect('/');
		}
		$page = $subpage = $title_for_layout = null;

		if (!empty($path[0])) {
			$page = $path[0];
		}
		if (!empty($path[1])) {
			$subpage = $path[1];
		}
		if (!empty($path[$count - 1])) {
			$title_for_layout = Inflector::humanize($path[$count - 1]);
		}
		$this->set(compact('page', 'subpage', 'title_for_layout'));

		try {
			$this->render(implode('/', $path));
		} catch (MissingViewException $e) {
			if (Configure::read('debug')) {
				throw $e;
			}
			throw new NotFoundException();
		}
	}
   
	/*
	  Mrunali D
	  15.10.2018
	  login
	*/
	 public function login() {
       
        if ($this->request->is('post')) {
			
            $email = !empty($this->request->data ['User'] ['email']) ? trim($this->request->data ['User'] ['email']) : null;
           $password = !empty($this->request->data ['User'] ['password']) ? trim(AuthComponent::password($this->request->data['User']['password'])) : null;
			
            $type = 'first';
            $conditions = array(
                'User.email' => $email,
                'User.password' => $password,
                'User.role_id' => array(COMPANY_ADMIN_ROLE_ID,DESIGN_ROLE_ID,TOOL_ROOM_ROLE_ID,HR_ROLE_ID),
                'User.is_active' => BOOL_TRUE,
                'User.is_deleted' => BOOL_FALSE
            );
            $fields = NULL;
            $contain = NULL;
            $order = NULL;
            $group = NULL;
            $recursive = 1;
            $this->loadModel('User');
            $userData = $this->User->getUserData($type, $conditions, $fields, $contain, $order, $group, $recursive);

            #get the user information
            if (!empty($userData)) {
			
                $userArray['User']['email'] = $email;
                $userArray['User']['password'] = $password;
                if ($this->Auth->login()) {
						
                    $this->User->id = $this->Session->read('Auth.User.id');
                    //update below flag
                    $saveableArray = array(
                        'is_logged_in' => 1,
                        'last_login' => date('Y-m-d H:i:s'),
                        'ip_address' => trim($this->request->clientIp())
                    );
                    $this->User->save($saveableArray);
					
                    
                
				$user_role_id = $this->Session->read('Auth.User.role_id');
				if($user_role_id==COMPANY_ADMIN_ROLE_ID)
					{	
				
						 $this->redirect(array('controller'=>'companyadmins','action'=>'dashboard','compadmin'=>true));
					}
					elseif($user_role_id==DESIGN_ROLE_ID)
					{
						$this->redirect(array('controller'=>'designdevelopments','action'=>'dashboard','design'=>true));
						
					}elseif($user_role_id==TOOL_ROOM_ROLE_ID)
					{
						$this->redirect(array('controller'=>'toolrooms','action'=>'dashboard','toolroom'=>true));
						
					}
					elseif($user_role_id==HR_ROLE_ID)
					{
						$this->redirect(array('controller'=>'hrs','action'=>'dashboard','hr'=>true));
						
					}
				}
				
				
            } else {
                $this->Session->setFlash(__("Invalid email address or password"), 'error');
            }
        }
    }
}
